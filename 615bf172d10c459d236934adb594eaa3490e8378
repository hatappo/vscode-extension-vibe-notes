## [src/commands/noteCommands.ts](src/commands/noteCommands.ts)

### [L18](src/commands/noteCommands.ts#L18)

> 18: const addNoteCommand = vscode.commands.registerCommand("vibe-notes.addNote", async () => {

エディタを開くときにエディタを分割して開くようにする。縦に分割するか横に分割するか、あるいは分割しないかは Config から設定可能にします。デフォルトは横に分割です。

### [L83](src/commands/noteCommands.ts#L83)

> 83: const editNoteAtCursorCommand = vscode.commands.registerCommand("vibe-notes.editNoteAtCursor", async () => {

エディタを開くときにエディタを分割して開くようにする。縦に分割するか横に分割するか、あるいは分割しないかは Config から設定可能にします。デフォルトは横に分割です。

## [src/ui/NoteCodeLensProvider.ts](src/ui/NoteCodeLensProvider.ts)

### [L39-51](src/ui/NoteCodeLensProvider.ts#L39)

> 39: // Create Edit CodeLens
> 40: const editLens = new vscode.CodeLens(range, {
> 41: 	title: "$(edit) Edit",
> 42: 	command: "vibe-notes.editNoteAtLine",
> 43: 	arguments: [document.uri, note.startLine],
> 44: });
> 45:
> 46: // Create Delete CodeLens
> 47: const deleteLens = new vscode.CodeLens(range, {
> 48: 	title: "$(trash) Delete",
> 49: 	command: "vibe-notes.deleteNoteAtLine",
> 50: 	arguments: [document.uri, note.startLine],
> 51: });

Code Lens に Edit as md ボタンと機能を追加します。
このボタンをクリックすると、 Markdown を生成し、エディタで開き、該当のノートのコメント箇所までカーソルとスクロールを移動しておきます。
また、 Code Lens での並びは Delete, Edit, Edit as md にします。
